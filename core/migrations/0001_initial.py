# Generated by Django 4.2.3 on 2023-09-13 18:08

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CareerActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.TextField()),
                ('role', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Film',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tmdb_id', models.PositiveIntegerField(unique=True)),
                ('title', models.TextField(blank=True)),
                ('original_title', models.TextField(blank=True)),
                ('runtime', models.PositiveIntegerField(blank=True)),
                ('custom_backdrop_path', models.TextField(blank=True)),
                ('backdrop_path', models.TextField(blank=True)),
                ('custom_poster_path', models.TextField(blank=True)),
                ('poster_path', models.TextField(blank=True)),
                ('overview', models.TextField(blank=True)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('last_updated', models.DateField(default=datetime.date.today)),
            ],
        ),
        migrations.CreateModel(
            name='FilmListLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(blank=True)),
                ('film', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.film')),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tmdb_id', models.PositiveBigIntegerField()),
                ('name', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tmdb_id', models.PositiveBigIntegerField(unique=True)),
                ('name', models.CharField(blank=True, max_length=70)),
                ('profile_picture_path', models.TextField(blank=True)),
                ('bio', models.TextField(blank=True)),
                ('career', models.JSONField(blank=True)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('location', models.TextField(blank=True)),
                ('known_for_department', models.TextField(blank=True)),
                ('last_updated', models.DateField(default=datetime.date.today)),
            ],
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=datetime.date.today, validators=[django.core.validators.MaxValueValidator(datetime.date(2023, 9, 13), message='You have entered a date that is beyond the current timeline. Please check your flux capacitor and try again.')])),
                ('time', models.TimeField(default=django.utils.timezone.now)),
                ('rating', models.DecimalField(decimal_places=1, max_digits=2, validators=[django.core.validators.MaxValueValidator(5, message="Rating can't be a value more than 5."), django.core.validators.MinValueValidator(0, message="Rating can't be a negative value.")])),
                ('film', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='core.film')),
                ('user', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='List',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=128)),
                ('description', models.TextField(blank=True)),
                ('ordered', models.BooleanField(default=False)),
                ('dateCreated', models.DateTimeField(default=django.utils.timezone.now)),
                ('films', models.ManyToManyField(blank=True, through='core.FilmListLog', to='core.film')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Gapt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=512)),
                ('datePosted', models.DateTimeField(default=django.utils.timezone.now)),
                ('film', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.film')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='filmlistlog',
            name='list',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.list'),
        ),
        migrations.AddField(
            model_name='film',
            name='genres',
            field=models.ManyToManyField(blank=True, to='core.genre'),
        ),
        migrations.AddField(
            model_name='film',
            name='people',
            field=models.ManyToManyField(through='core.CareerActivity', to='core.person'),
        ),
        migrations.AddField(
            model_name='careeractivity',
            name='film',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.film'),
        ),
        migrations.AddField(
            model_name='careeractivity',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.person'),
        ),
    ]
